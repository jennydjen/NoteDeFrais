<?php

namespace Jenny\ImportBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * LigneFraisRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LigneFraisRepository extends EntityRepository {

    public function isExist($category, $date, $user) {
        $rsm = new ResultSetMapping();
        $rsm->addEntityResult('Jenny\ImportBundle\Entity\LigneFrais', 'l');
        $rsm->addFieldResult('l', 'id', 'id');
        $rsm->addFieldResult('l', 'montant', 'montant');

        $sql = 'SELECT l.id, l.montant FROM lignefrais l WHERE l.category_id = ? AND l.date = ? AND l.user_id = ?';

        $query = $this->_em->createNativeQuery($sql, $rsm);
        $query->setParameter(1, $category);
        $query->setParameter(2, $date->format("Y-m-d"));
        $query->setParameter(3, $user);

        $ligne = $query->getResult();
        return $ligne;
    }

    public function getStats($dateDebut, $dateFin, $user, $category, $typeCategory) {
        $query = $this->createQueryBuilder('l');
        $query->select('sum(l.montant) as total');
        $query->where('l.date BETWEEN :dateDebut AND :dateFin');
        $query->setParameter('dateDebut', $dateDebut);
        $query->setParameter('dateFin', $dateFin);

        if ($category) {
            $query->leftJoin('l.category', 'c');
            $query->andWhere('c.sum = 1');
            if ($typeCategory == 1) { // Sur category
                $query->andWhere('c.parent = :idCat');
                $query->setParameter('idCat', $category);
            } else if ($typeCategory == 2) { // Sous category
                $query->andWhere('l.category = :idCat');
                $query->setParameter('idCat', $category);
            }
        }

        if ($user) {
            $query->andWhere('l.user = :idUser');
            $query->setParameter('idUser', $user->getId());
        }

        $count = $query->getQuery()->getSingleScalarResult();
        return $count;
    }

}
